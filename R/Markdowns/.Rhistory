gpXY
mean_xlocation <- mean(x$`Corrected XYZ_Distance (um)`, na.rm=TRUE)
ddXYZ <- with(xyzdens,data.frame(x,y))
gpXYZ <- gpXYZ + geom_segment(aes(x=mean_xlocation, y=0, xend=mean_xlocation, yend=2.8), linetype="dashed", color="white")
gpXYZ <- gpXYZ + geom_text(aes(x = mean_xlocation + 0.005, y=2.8 + 0.2, label=paste("Mean (", round(mean_xlocation * 1000, digits=0), " nm)", sep="")), color="white", angle=45, hjust="left", size=4)
gpXYZ
##XY
gpXY <- ggplot_setup(TRUE)
gpXY <- gpXY + geom_density(data=x, aes(`Corrected XY_Distance (um)`), color="lightblue", fill="lightblue", alpha=0.3, size=1.0) + scale_x_continuous(limits=c(0,1.0), breaks=c(0, 0.25, 0.5, 0.75, 1.0)) + xlab("XY Distance (um)") + ylab("Normalized Density") + theme(axis.line.x = element_line(size=1.2, color="white"), axis.line.y = element_line(size=1.2, color="white")) + scale_y_continuous(limits=c(0,5), breaks=c(0, 1, 2, 3, 4,5))
##XYZ
gpXYZ <- ggplot_setup(TRUE)
gpXYZ <- gpXYZ + geom_density(data=x, aes(`Corrected XYZ_Distance (um)`), color="lightblue", fill="lightblue", alpha=0.3, size=1.0) + scale_x_continuous(limits=c(0,1.5), breaks=c(0, 0.25, 0.5, 0.75, 1.0, 1.25, 1.5)) + xlab("3D Distance (um)") + ylab("Normalized Density") + theme(axis.line.x = element_line(size=1.2, color="white"), axis.line.y = element_line(size=1.2, color="white")) + scale_y_continuous(limits=c(0,4), breaks=c(0, 1, 2, 3, 4))
##Add in ribbon for middle 90% of observations
#pdf("~/Desktop/Sox2_data")
XYq90 <- quantile(x$`Corrected XY_Distance (um)`, .90)
XYZq90 <- quantile(x$`Corrected XYZ_Distance (um)`, .90)
ddXY <- with(xydens,data.frame(x,y))
gpXY <- gpXY + geom_ribbon(data=subset(ddXY, x<XYq90),aes(ymax=`y`, ymin=0, x=`x`),fill="lightblue",colour=NA,alpha=0.5)
gpXY <- gpXY + geom_text(data = data.frame(quan=XYq90), aes(x = `quan` + 0.005, y=1.0, label=paste("90% (", round(XYq90 * 1000, digits=0), " nm)", sep="")), color="white", angle=45, hjust="left", size=4)
mean_xlocation <- mean(x$`Corrected XY_Distance (um)`, na.rm=TRUE)
gpXY <- gpXY + geom_segment(aes(x=mean_xlocation, y=0, xend=mean_xlocation, yend=2.8), linetype="dashed", color="white")
gpXY <- gpXY + geom_text(aes(x = mean_xlocation + 0.005, y=2.8 + 0.2, label=paste("Mean (", round(mean_xlocation * 1000, digits=0), " nm)", sep="")), color="white", angle=45, hjust="left", size=4)
gpXY
mean_xlocation <- mean(x$`Corrected XYZ_Distance (um)`, na.rm=TRUE)
ddXYZ <- with(xyzdens,data.frame(x,y))
gpXYZ <- gpXYZ + geom_ribbon(data=subset(ddXYZ, x<XYZq90),aes(ymax=`y`, ymin=0, x=`x`),fill="lightblue",colour=NA,alpha=0.5)
gpXYZ <- gpXYZ + geom_text(data = data.frame(quan=XYZq90), aes(x = `quan` + 0.005, y=1.0, label=paste("90% (", round(XYZq90 * 1000, digits=0), " nm)", sep="")), color="white", angle=45, hjust="left", size=4)
gpXYZ <- gpXYZ + geom_segment(aes(x=mean_xlocation, y=0, xend=mean_xlocation, yend=2.5), linetype="dashed", color="white")
gpXYZ <- gpXYZ + geom_text(aes(x = mean_xlocation + 0.005, y=2.5 + 0.2, label=paste("Mean (", round(mean_xlocation * 1000, digits=0), " nm)", sep="")), color="white", angle=45, hjust="left", size=4)
gpXYZ
##XY
gpXY <- ggplot_setup(TRUE)
gpXY <- gpXY + geom_density(data=x, aes(`Corrected XY_Distance (um)`), color="lightblue", fill="lightblue", alpha=0.3, size=1.0) + scale_x_continuous(limits=c(0,1.0), breaks=c(0, 0.25, 0.5, 0.75, 1.0)) + xlab("XY Distance (um)") + ylab("Normalized Density") + theme(axis.line.x = element_line(size=1.2, color="white"), axis.line.y = element_line(size=1.2, color="white")) + scale_y_continuous(limits=c(0,5), breaks=c(0, 1, 2, 3, 4,5))
##XYZ
gpXYZ <- ggplot_setup(TRUE)
gpXYZ <- gpXYZ + geom_density(data=x, aes(`Corrected XYZ_Distance (um)`), color="lightblue", fill="lightblue", alpha=0.3, size=1.0) + scale_x_continuous(limits=c(0,1.5), breaks=c(0, 0.25, 0.5, 0.75, 1.0, 1.25, 1.5)) + xlab("3D Distance (um)") + ylab("Normalized Density") + theme(axis.line.x = element_line(size=1.2, color="white"), axis.line.y = element_line(size=1.2, color="white")) + scale_y_continuous(limits=c(0,4), breaks=c(0, 1, 2, 3, 4))
##Add in ribbon for middle 90% of observations
#pdf("~/Desktop/Sox2_data")
XYq90 <- quantile(x$`Corrected XY_Distance (um)`, .90)
XYZq90 <- quantile(x$`Corrected XYZ_Distance (um)`, .90)
ddXY <- with(xydens,data.frame(x,y))
gpXY <- gpXY + geom_ribbon(data=subset(ddXY, x<XYq90),aes(ymax=`y`, ymin=0, x=`x`),fill="lightblue",colour=NA,alpha=0.5)
gpXY <- gpXY + geom_text(data = data.frame(quan=XYq90), aes(x = `quan` + 0.005, y=1.0, label=paste("90% (", round(XYq90 * 1000, digits=0), " nm)", sep="")), color="white", angle=45, hjust="left", size=4)
mean_xlocation <- mean(x$`Corrected XY_Distance (um)`, na.rm=TRUE)
gpXY <- gpXY + geom_segment(aes(x=mean_xlocation, y=0, xend=mean_xlocation, yend=2.8), linetype="dashed", color="white")
gpXY <- gpXY + geom_text(aes(x = mean_xlocation + 0.005, y=2.8 + 0.2, label=paste("Mean (", round(mean_xlocation * 1000, digits=0), " nm)", sep="")), color="white", angle=45, hjust="left", size=4)
gpXY
mean_xlocation <- mean(x$`Corrected XYZ_Distance (um)`, na.rm=TRUE)
ddXYZ <- with(xyzdens,data.frame(x,y))
gpXYZ <- gpXYZ + geom_ribbon(data=subset(ddXYZ, x<XYZq90),aes(ymax=`y`, ymin=0, x=`x`),fill="lightblue",colour=NA,alpha=0.5)
gpXYZ <- gpXYZ + geom_text(data = data.frame(quan=XYZq90), aes(x = `quan` + 0.005, y=0.8, label=paste("90% (", round(XYZq90 * 1000, digits=0), " nm)", sep="")), color="white", angle=45, hjust="left", size=4)
gpXYZ <- gpXYZ + geom_segment(aes(x=mean_xlocation, y=0, xend=mean_xlocation, yend=2.3), linetype="dashed", color="white")
gpXYZ <- gpXYZ + geom_text(aes(x = mean_xlocation + 0.005, y=2.3 + 0.2, label=paste("Mean (", round(mean_xlocation * 1000, digits=0), " nm)", sep="")), color="white", angle=45, hjust="left", size=4)
gpXYZ
##XY
gpXY <- ggplot_setup(TRUE)
gpXY <- gpXY + geom_density(data=x, aes(`Corrected XY_Distance (um)`), color="lightblue", fill="lightblue", alpha=0.3, size=1.0) + scale_x_continuous(limits=c(0,1.0), breaks=c(0, 0.25, 0.5, 0.75, 1.0)) + xlab("XY Distance (um)") + ylab("Normalized Density") + theme(axis.line.x = element_line(size=1.2, color="white"), axis.line.y = element_line(size=1.2, color="white")) + scale_y_continuous(limits=c(0,5), breaks=c(0, 1, 2, 3, 4,5))
##XYZ
gpXYZ <- ggplot_setup(TRUE)
gpXYZ <- gpXYZ + geom_density(data=x, aes(`Corrected XYZ_Distance (um)`), color="lightblue", fill="lightblue", alpha=0.3, size=1.0) + scale_x_continuous(limits=c(0,1.5), breaks=c(0, 0.25, 0.5, 0.75, 1.0, 1.25, 1.5)) + xlab("3D Distance (um)") + ylab("Normalized Density") + theme(axis.line.x = element_line(size=1.2, color="white"), axis.line.y = element_line(size=1.2, color="white")) + scale_y_continuous(limits=c(0,4), breaks=c(0, 1, 2, 3, 4))
##Add in ribbon for middle 90% of observations
#pdf("~/Desktop/Sox2_data")
XYq90 <- quantile(x$`Corrected XY_Distance (um)`, .90)
XYZq90 <- quantile(x$`Corrected XYZ_Distance (um)`, .90)
ddXY <- with(xydens,data.frame(x,y))
gpXY <- gpXY + geom_ribbon(data=subset(ddXY, x<XYq90),aes(ymax=`y`, ymin=0, x=`x`),fill="lightblue",colour=NA,alpha=0.5)
gpXY <- gpXY + geom_text(data = data.frame(quan=XYq90), aes(x = `quan` + 0.005, y=1.0, label=paste("90% (", round(XYq90 * 1000, digits=0), " nm)", sep="")), color="white", angle=45, hjust="left", size=4)
mean_xlocation <- mean(x$`Corrected XY_Distance (um)`, na.rm=TRUE)
gpXY <- gpXY + geom_segment(aes(x=mean_xlocation, y=0, xend=mean_xlocation, yend=2.8), linetype="dashed", color="white")
gpXY <- gpXY + geom_text(aes(x = mean_xlocation + 0.005, y=2.8 + 0.2, label=paste("Mean (", round(mean_xlocation * 1000, digits=0), " nm)", sep="")), color="white", angle=45, hjust="left", size=4)
gpXY
mean_xlocation <- mean(x$`Corrected XYZ_Distance (um)`, na.rm=TRUE)
ddXYZ <- with(xyzdens,data.frame(x,y))
gpXYZ <- gpXYZ + geom_ribbon(data=subset(ddXYZ, x<XYZq90),aes(ymax=`y`, ymin=0, x=`x`),fill="lightblue",colour=NA,alpha=0.5)
gpXYZ <- gpXYZ + geom_text(data = data.frame(quan=XYZq90), aes(x = `quan` + 0.005, y=0.75, label=paste("90% (", round(XYZq90 * 1000, digits=0), " nm)", sep="")), color="white", angle=45, hjust="left", size=4)
gpXYZ <- gpXYZ + geom_segment(aes(x=mean_xlocation, y=0, xend=mean_xlocation, yend=2.2), linetype="dashed", color="white")
gpXYZ <- gpXYZ + geom_text(aes(x = mean_xlocation + 0.005, y=2.2 + 0.2, label=paste("Mean (", round(mean_xlocation * 1000, digits=0), " nm)", sep="")), color="white", angle=45, hjust="left", size=4)
gpXYZ
##XY
gpXY <- ggplot_setup(TRUE)
gpXY <- gpXY + geom_density(data=x, aes(`Corrected XY_Distance (um)`), color="lightblue", fill="lightblue", alpha=0.3, size=1.0) + scale_x_continuous(limits=c(0,1.0), breaks=c(0, 0.25, 0.5, 0.75, 1.0)) + xlab("XY Distance (um)") + ylab("Normalized Density") + theme(axis.line.x = element_line(size=1.2, color="white"), axis.line.y = element_line(size=1.2, color="white")) + scale_y_continuous(limits=c(0,5), breaks=c(0, 1, 2, 3, 4,5))
##XYZ
gpXYZ <- ggplot_setup(TRUE)
gpXYZ <- gpXYZ + geom_density(data=x, aes(`Corrected XYZ_Distance (um)`), color="lightblue", fill="lightblue", alpha=0.3, size=1.0) + scale_x_continuous(limits=c(0,1.5), breaks=c(0, 0.25, 0.5, 0.75, 1.0, 1.25, 1.5)) + xlab("3D Distance (um)") + ylab("Normalized Density") + theme(axis.line.x = element_line(size=1.2, color="white"), axis.line.y = element_line(size=1.2, color="white")) + scale_y_continuous(limits=c(0,4), breaks=c(0, 1, 2, 3, 4))
##Add in ribbon for middle 90% of observations
pdf("~/Desktop/Sox2_data_densitycurves.pdf")
XYq90 <- quantile(x$`Corrected XY_Distance (um)`, .90)
XYZq90 <- quantile(x$`Corrected XYZ_Distance (um)`, .90)
ddXY <- with(xydens,data.frame(x,y))
gpXY <- gpXY + geom_ribbon(data=subset(ddXY, x<XYq90),aes(ymax=`y`, ymin=0, x=`x`),fill="lightblue",colour=NA,alpha=0.5)
gpXY <- gpXY + geom_text(data = data.frame(quan=XYq90), aes(x = `quan` + 0.005, y=1.0, label=paste("90% (", round(XYq90 * 1000, digits=0), " nm)", sep="")), color="white", angle=45, hjust="left", size=4)
mean_xlocation <- mean(x$`Corrected XY_Distance (um)`, na.rm=TRUE)
gpXY <- gpXY + geom_segment(aes(x=mean_xlocation, y=0, xend=mean_xlocation, yend=2.8), linetype="dashed", color="white")
gpXY <- gpXY + geom_text(aes(x = mean_xlocation + 0.005, y=2.8 + 0.2, label=paste("Mean (", round(mean_xlocation * 1000, digits=0), " nm)", sep="")), color="white", angle=45, hjust="left", size=4)
gpXY
mean_xlocation <- mean(x$`Corrected XYZ_Distance (um)`, na.rm=TRUE)
ddXYZ <- with(xyzdens,data.frame(x,y))
gpXYZ <- gpXYZ + geom_ribbon(data=subset(ddXYZ, x<XYZq90),aes(ymax=`y`, ymin=0, x=`x`),fill="lightblue",colour=NA,alpha=0.5)
gpXYZ <- gpXYZ + geom_text(data = data.frame(quan=XYZq90), aes(x = `quan` + 0.005, y=0.75, label=paste("90% (", round(XYZq90 * 1000, digits=0), " nm)", sep="")), color="white", angle=45, hjust="left", size=4)
gpXYZ <- gpXYZ + geom_segment(aes(x=mean_xlocation, y=0, xend=mean_xlocation, yend=2.2), linetype="dashed", color="white")
gpXYZ <- gpXYZ + geom_text(aes(x = mean_xlocation + 0.005, y=2.2 + 0.2, label=paste("Mean (", round(mean_xlocation * 1000, digits=0), " nm)", sep="")), color="white", angle=45, hjust="left", size=4)
gpXYZ
dev.off()
##XY
gpXY <- ggplot_setup(TRUE)
gpXY <- gpXY + geom_density(data=x, aes(`Corrected XY_Distance (um)`), color="lightblue", fill="lightblue", alpha=0.3, size=1.0) + scale_x_continuous(limits=c(0,1.0), breaks=c(0, 0.25, 0.5, 0.75, 1.0)) + xlab("XY Distance (um)") + ylab("Normalized Density") + theme(axis.line.x = element_line(size=1.2, color="white"), axis.line.y = element_line(size=1.2, color="white")) + scale_y_continuous(limits=c(0,5), breaks=c(0, 1, 2, 3, 4,5))
##XYZ
gpXYZ <- ggplot_setup(TRUE)
gpXYZ <- gpXYZ + geom_density(data=x, aes(`Corrected XYZ_Distance (um)`), color="lightblue", fill="lightblue", alpha=0.3, size=1.0) + scale_x_continuous(limits=c(0,1.5), breaks=c(0, 0.25, 0.5, 0.75, 1.0, 1.25, 1.5)) + xlab("3D Distance (um)") + ylab("Normalized Density") + theme(axis.line.x = element_line(size=1.2, color="white"), axis.line.y = element_line(size=1.2, color="white")) + scale_y_continuous(limits=c(0,4), breaks=c(0, 1, 2, 3, 4))
##Add in ribbon for middle 90% of observations
pdf("~/Desktop/Sox2_data_densitycurves.pdf", width = 5, height=4)
XYq90 <- quantile(x$`Corrected XY_Distance (um)`, .90)
XYZq90 <- quantile(x$`Corrected XYZ_Distance (um)`, .90)
ddXY <- with(xydens,data.frame(x,y))
gpXY <- gpXY + geom_ribbon(data=subset(ddXY, x<XYq90),aes(ymax=`y`, ymin=0, x=`x`),fill="lightblue",colour=NA,alpha=0.5)
gpXY <- gpXY + geom_text(data = data.frame(quan=XYq90), aes(x = `quan` + 0.005, y=1.0, label=paste("90% (", round(XYq90 * 1000, digits=0), " nm)", sep="")), color="white", angle=45, hjust="left", size=4)
mean_xlocation <- mean(x$`Corrected XY_Distance (um)`, na.rm=TRUE)
gpXY <- gpXY + geom_segment(aes(x=mean_xlocation, y=0, xend=mean_xlocation, yend=2.8), linetype="dashed", color="white")
gpXY <- gpXY + geom_text(aes(x = mean_xlocation + 0.005, y=2.8 + 0.2, label=paste("Mean (", round(mean_xlocation * 1000, digits=0), " nm)", sep="")), color="white", angle=45, hjust="left", size=4)
gpXY
mean_xlocation <- mean(x$`Corrected XYZ_Distance (um)`, na.rm=TRUE)
ddXYZ <- with(xyzdens,data.frame(x,y))
gpXYZ <- gpXYZ + geom_ribbon(data=subset(ddXYZ, x<XYZq90),aes(ymax=`y`, ymin=0, x=`x`),fill="lightblue",colour=NA,alpha=0.5)
gpXYZ <- gpXYZ + geom_text(data = data.frame(quan=XYZq90), aes(x = `quan` + 0.005, y=0.75, label=paste("90% (", round(XYZq90 * 1000, digits=0), " nm)", sep="")), color="white", angle=45, hjust="left", size=4)
gpXYZ <- gpXYZ + geom_segment(aes(x=mean_xlocation, y=0, xend=mean_xlocation, yend=2.2), linetype="dashed", color="white")
gpXYZ <- gpXYZ + geom_text(aes(x = mean_xlocation + 0.005, y=2.2 + 0.2, label=paste("Mean (", round(mean_xlocation * 1000, digits=0), " nm)", sep="")), color="white", angle=45, hjust="left", size=4)
gpXYZ
dev.off()
##XY
gpXY <- ggplot_setup(TRUE)
gpXY <- gpXY + geom_density(data=x, aes(`Corrected XY_Distance (um)`), color="lightblue", fill="lightblue", alpha=0.3, size=1.0) + scale_x_continuous(limits=c(0,1.0), breaks=c(0, 0.25, 0.5, 0.75, 1.0)) + xlab("XY Distance (um)") + ylab("Normalized Density") + theme(axis.line.x = element_line(size=1.2, color="white"), axis.line.y = element_line(size=1.2, color="white")) + scale_y_continuous(limits=c(0,5), breaks=c(0, 1, 2, 3, 4,5))
##XYZ
gpXYZ <- ggplot_setup(TRUE)
gpXYZ <- gpXYZ + geom_density(data=x, aes(`Corrected XYZ_Distance (um)`), color="lightblue", fill="lightblue", alpha=0.3, size=1.0) + scale_x_continuous(limits=c(0,1.5), breaks=c(0, 0.25, 0.5, 0.75, 1.0, 1.25, 1.5)) + xlab("3D Distance (um)") + ylab("Normalized Density") + theme(axis.line.x = element_line(size=1.2, color="white"), axis.line.y = element_line(size=1.2, color="white")) + scale_y_continuous(limits=c(0,4), breaks=c(0, 1, 2, 3, 4))
##Add in ribbon for middle 90% of observations
pdf("~/Desktop/Sox2_data_densitycurves.pdf", width = 8, height=6)
XYq90 <- quantile(x$`Corrected XY_Distance (um)`, .90)
XYZq90 <- quantile(x$`Corrected XYZ_Distance (um)`, .90)
ddXY <- with(xydens,data.frame(x,y))
gpXY <- gpXY + geom_ribbon(data=subset(ddXY, x<XYq90),aes(ymax=`y`, ymin=0, x=`x`),fill="lightblue",colour=NA,alpha=0.5)
gpXY <- gpXY + geom_text(data = data.frame(quan=XYq90), aes(x = `quan` + 0.005, y=1.0, label=paste("90% (", round(XYq90 * 1000, digits=0), " nm)", sep="")), color="white", angle=45, hjust="left", size=4)
mean_xlocation <- mean(x$`Corrected XY_Distance (um)`, na.rm=TRUE)
gpXY <- gpXY + geom_segment(aes(x=mean_xlocation, y=0, xend=mean_xlocation, yend=2.8), linetype="dashed", color="white")
gpXY <- gpXY + geom_text(aes(x = mean_xlocation + 0.005, y=2.8 + 0.2, label=paste("Mean (", round(mean_xlocation * 1000, digits=0), " nm)", sep="")), color="white", angle=45, hjust="left", size=4)
gpXY
mean_xlocation <- mean(x$`Corrected XYZ_Distance (um)`, na.rm=TRUE)
ddXYZ <- with(xyzdens,data.frame(x,y))
gpXYZ <- gpXYZ + geom_ribbon(data=subset(ddXYZ, x<XYZq90),aes(ymax=`y`, ymin=0, x=`x`),fill="lightblue",colour=NA,alpha=0.5)
gpXYZ <- gpXYZ + geom_text(data = data.frame(quan=XYZq90), aes(x = `quan` + 0.005, y=0.75, label=paste("90% (", round(XYZq90 * 1000, digits=0), " nm)", sep="")), color="white", angle=45, hjust="left", size=4)
gpXYZ <- gpXYZ + geom_segment(aes(x=mean_xlocation, y=0, xend=mean_xlocation, yend=2.2), linetype="dashed", color="white")
gpXYZ <- gpXYZ + geom_text(aes(x = mean_xlocation + 0.005, y=2.2 + 0.2, label=paste("Mean (", round(mean_xlocation * 1000, digits=0), " nm)", sep="")), color="white", angle=45, hjust="left", size=4)
gpXYZ
dev.off()
##XY
gpXY <- ggplot_setup(TRUE)
gpXY <- gpXY + geom_density(data=x, aes(`Corrected XY_Distance (um)`), color="lightblue", fill="lightblue", alpha=0.3, size=1.0) + scale_x_continuous(limits=c(0,1.0), breaks=c(0, 0.25, 0.5, 0.75, 1.0)) + xlab("XY Distance (um)") + ylab("Normalized Density") + theme(axis.line.x = element_line(size=1.2, color="white"), axis.line.y = element_line(size=1.2, color="white")) + scale_y_continuous(limits=c(0,5), breaks=c(0, 1, 2, 3, 4,5))
##XYZ
gpXYZ <- ggplot_setup(TRUE)
gpXYZ <- gpXYZ + geom_density(data=x, aes(`Corrected XYZ_Distance (um)`), color="lightblue", fill="lightblue", alpha=0.3, size=1.0) + scale_x_continuous(limits=c(0,1.5), breaks=c(0, 0.25, 0.5, 0.75, 1.0, 1.25, 1.5)) + xlab("3D Distance (um)") + ylab("Normalized Density") + theme(axis.line.x = element_line(size=1.2, color="white"), axis.line.y = element_line(size=1.2, color="white")) + scale_y_continuous(limits=c(0,4), breaks=c(0, 1, 2, 3, 4))
##Add in ribbon for middle 90% of observations
pdf("~/Desktop/Sox2_data_densitycurves.pdf", width = 8, height=5)
XYq90 <- quantile(x$`Corrected XY_Distance (um)`, .90)
XYZq90 <- quantile(x$`Corrected XYZ_Distance (um)`, .90)
ddXY <- with(xydens,data.frame(x,y))
gpXY <- gpXY + geom_ribbon(data=subset(ddXY, x<XYq90),aes(ymax=`y`, ymin=0, x=`x`),fill="lightblue",colour=NA,alpha=0.5)
gpXY <- gpXY + geom_text(data = data.frame(quan=XYq90), aes(x = `quan` + 0.005, y=1.0, label=paste("90% (", round(XYq90 * 1000, digits=0), " nm)", sep="")), color="white", angle=45, hjust="left", size=4)
mean_xlocation <- mean(x$`Corrected XY_Distance (um)`, na.rm=TRUE)
gpXY <- gpXY + geom_segment(aes(x=mean_xlocation, y=0, xend=mean_xlocation, yend=2.8), linetype="dashed", color="white")
gpXY <- gpXY + geom_text(aes(x = mean_xlocation + 0.005, y=2.8 + 0.2, label=paste("Mean (", round(mean_xlocation * 1000, digits=0), " nm)", sep="")), color="white", angle=45, hjust="left", size=4)
gpXY
mean_xlocation <- mean(x$`Corrected XYZ_Distance (um)`, na.rm=TRUE)
ddXYZ <- with(xyzdens,data.frame(x,y))
gpXYZ <- gpXYZ + geom_ribbon(data=subset(ddXYZ, x<XYZq90),aes(ymax=`y`, ymin=0, x=`x`),fill="lightblue",colour=NA,alpha=0.5)
gpXYZ <- gpXYZ + geom_text(data = data.frame(quan=XYZq90), aes(x = `quan` + 0.005, y=0.75, label=paste("90% (", round(XYZq90 * 1000, digits=0), " nm)", sep="")), color="white", angle=45, hjust="left", size=4)
gpXYZ <- gpXYZ + geom_segment(aes(x=mean_xlocation, y=0, xend=mean_xlocation, yend=2.2), linetype="dashed", color="white")
gpXYZ <- gpXYZ + geom_text(aes(x = mean_xlocation + 0.005, y=2.2 + 0.2, label=paste("Mean (", round(mean_xlocation * 1000, digits=0), " nm)", sep="")), color="white", angle=45, hjust="left", size=4)
gpXYZ
dev.off()
pdf("~/Desktop/Sox2_data_densitycurves.pdf", width = 8, height=5)
##XY
gpXY <- ggplot_setup(TRUE)
gpXY <- gpXY + geom_density(data=x, aes(`Corrected XY_Distance (um)`), color="lightblue", fill="lightblue", alpha=0.3, size=1.0) + scale_x_continuous(limits=c(0,1.0), breaks=c(0, 0.25, 0.5, 0.75, 1.0)) + xlab("XY Distance (um)") + ylab("Normalized Density") + theme(axis.line.x = element_line(size=1.2, color="white"), axis.line.y = element_line(size=1.2, color="white")) + scale_y_continuous(limits=c(0,5), breaks=c(0, 1, 2, 3, 4,5))
gpXY
##XYZ
gpXYZ <- ggplot_setup(TRUE)
gpXYZ <- gpXYZ + geom_density(data=x, aes(`Corrected XYZ_Distance (um)`), color="lightblue", fill="lightblue", alpha=0.3, size=1.0) + scale_x_continuous(limits=c(0,1.5), breaks=c(0, 0.25, 0.5, 0.75, 1.0, 1.25, 1.5)) + xlab("3D Distance (um)") + ylab("Normalized Density") + theme(axis.line.x = element_line(size=1.2, color="white"), axis.line.y = element_line(size=1.2, color="white")) + scale_y_continuous(limits=c(0,4), breaks=c(0, 1, 2, 3, 4))
gpXYZ
##Add in ribbon for middle 90% of observations
XYq90 <- quantile(x$`Corrected XY_Distance (um)`, .90)
XYZq90 <- quantile(x$`Corrected XYZ_Distance (um)`, .90)
ddXY <- with(xydens,data.frame(x,y))
gpXY <- gpXY + geom_ribbon(data=subset(ddXY, x<XYq90),aes(ymax=`y`, ymin=0, x=`x`),fill="lightblue",colour=NA,alpha=0.5)
gpXY <- gpXY + geom_text(data = data.frame(quan=XYq90), aes(x = `quan` + 0.005, y=1.0, label=paste("90% (", round(XYq90 * 1000, digits=0), " nm)", sep="")), color="white", angle=45, hjust="left", size=4)
mean_xlocation <- mean(x$`Corrected XY_Distance (um)`, na.rm=TRUE)
gpXY <- gpXY + geom_segment(aes(x=mean_xlocation, y=0, xend=mean_xlocation, yend=2.8), linetype="dashed", color="white")
gpXY <- gpXY + geom_text(aes(x = mean_xlocation + 0.005, y=2.8 + 0.2, label=paste("Mean (", round(mean_xlocation * 1000, digits=0), " nm)", sep="")), color="white", angle=45, hjust="left", size=4)
gpXY
mean_xlocation <- mean(x$`Corrected XYZ_Distance (um)`, na.rm=TRUE)
ddXYZ <- with(xyzdens,data.frame(x,y))
gpXYZ <- gpXYZ + geom_ribbon(data=subset(ddXYZ, x<XYZq90),aes(ymax=`y`, ymin=0, x=`x`),fill="lightblue",colour=NA,alpha=0.5)
gpXYZ <- gpXYZ + geom_text(data = data.frame(quan=XYZq90), aes(x = `quan` + 0.005, y=0.75, label=paste("90% (", round(XYZq90 * 1000, digits=0), " nm)", sep="")), color="white", angle=45, hjust="left", size=4)
gpXYZ <- gpXYZ + geom_segment(aes(x=mean_xlocation, y=0, xend=mean_xlocation, yend=2.2), linetype="dashed", color="white")
gpXYZ <- gpXYZ + geom_text(aes(x = mean_xlocation + 0.005, y=2.2 + 0.2, label=paste("Mean (", round(mean_xlocation * 1000, digits=0), " nm)", sep="")), color="white", angle=45, hjust="left", size=4)
gpXYZ
dev.off()
x <- Sox2_data_unsync_20sec
pdf("~/Desktop/Sox2_data_densitycurves2.pdf", width = 8, height=5)
##XY
gpXY <- ggplot_setup(TRUE)
gpXY <- gpXY + geom_density(data=x[x$Cell_Line == "101515.C3_ESC"], aes(`Corrected XY_Distance (um)`), color="lightblue", fill="lightblue", alpha=0.3, size=1.0) + scale_x_continuous(limits=c(0,1.0), breaks=c(0, 0.25, 0.5, 0.75, 1.0)) + xlab("XY Distance (um)") + ylab("Normalized Density") + theme(axis.line.x = element_line(size=1.2, color="white"), axis.line.y = element_line(size=1.2, color="white")) + scale_y_continuous(limits=c(0,5), breaks=c(0, 1, 2, 3, 4,5))
pdf("~/Desktop/Sox2_data_densitycurves2.pdf", width = 8, height=5)
##XY
gpXY <- ggplot_setup(TRUE)
gpXY <- gpXY + geom_density(data=x[x$Cell_Line == "101515.C3_ESC",], aes(`Corrected XY_Distance (um)`), color="lightblue", fill="lightblue", alpha=0.3, size=1.0) + scale_x_continuous(limits=c(0,1.0), breaks=c(0, 0.25, 0.5, 0.75, 1.0)) + xlab("XY Distance (um)") + ylab("Normalized Density") + theme(axis.line.x = element_line(size=1.2, color="white"), axis.line.y = element_line(size=1.2, color="white")) + scale_y_continuous(limits=c(0,5), breaks=c(0, 1, 2, 3, 4,5))
gpXY <- gpXY + geom_density(data=x[x$Cell_Line == "013116.2G8_ESC",], aes(`Corrected XY_Distance (um)`), color="salmon", fill="salmon", alpha=0.3, size=1.0)
gpXY
##XYZ
gpXYZ <- ggplot_setup(TRUE)
gpXYZ <- gpXYZ + geom_density(data=x[x$Cell_Line == "101515.C3_ESC"], aes(`Corrected XYZ_Distance (um)`), color="lightblue", fill="lightblue", alpha=0.3, size=1.0) + scale_x_continuous(limits=c(0,1.0), breaks=c(0, 0.25, 0.5, 0.75, 1.0)) + xlab("3D Distance (um)") + ylab("Normalized Density") + theme(axis.line.x = element_line(size=1.2, color="white"), axis.line.y = element_line(size=1.2, color="white")) + scale_y_continuous(limits=c(0,5), breaks=c(0, 1, 2, 3, 4,5))
pdf("~/Desktop/Sox2_data_densitycurves2.pdf", width = 8, height=5)
##XY
gpXY <- ggplot_setup(TRUE)
gpXY <- gpXY + geom_density(data=x[x$Cell_Line == "101515.C3_ESC",], aes(`Corrected XY_Distance (um)`), color="lightblue", fill="lightblue", alpha=0.3, size=1.0) + scale_x_continuous(limits=c(0,1.0), breaks=c(0, 0.25, 0.5, 0.75, 1.0)) + xlab("XY Distance (um)") + ylab("Normalized Density") + theme(axis.line.x = element_line(size=1.2, color="white"), axis.line.y = element_line(size=1.2, color="white")) + scale_y_continuous(limits=c(0,5), breaks=c(0, 1, 2, 3, 4,5))
gpXY <- gpXY + geom_density(data=x[x$Cell_Line == "013116.2G8_ESC",], aes(`Corrected XY_Distance (um)`), color="salmon", fill="salmon", alpha=0.3, size=1.0)
gpXY
##XYZ
gpXYZ <- ggplot_setup(TRUE)
gpXYZ <- gpXYZ + geom_density(data=x[x$Cell_Line == "101515.C3_ESC",], aes(`Corrected XYZ_Distance (um)`), color="lightblue", fill="lightblue", alpha=0.3, size=1.0) + scale_x_continuous(limits=c(0,1.0), breaks=c(0, 0.25, 0.5, 0.75, 1.0)) + xlab("3D Distance (um)") + ylab("Normalized Density") + theme(axis.line.x = element_line(size=1.2, color="white"), axis.line.y = element_line(size=1.2, color="white")) + scale_y_continuous(limits=c(0,5), breaks=c(0, 1, 2, 3, 4,5))
gpXYZ <- gpXYZ + geom_density(data=x[x$Cell_Line == "013116.2G8_ESC",], aes(`Corrected XYZ_Distance (um)`), color="salmon", fill="salmon", alpha=0.3, size=1.0)
gpXYZ
dev.off()
pdf("~/Desktop/Sox2_data_densitycurves2.pdf", width = 8, height=5)
##XY
gpXY <- ggplot_setup(TRUE)
gpXY <- gpXY + geom_density(data=x[x$Cell_Line == "101515.C3_ESC",], aes(`Corrected XY_Distance (um)`), color="lightblue", fill="lightblue", alpha=0.3, size=1.0) + scale_x_continuous(limits=c(0,1.0), breaks=c(0, 0.25, 0.5, 0.75, 1.0)) + xlab("XY Distance (um)") + ylab("Normalized Density") + theme(axis.line.x = element_line(size=1.2, color="white"), axis.line.y = element_line(size=1.2, color="white")) + scale_y_continuous(limits=c(0,5), breaks=c(0, 1, 2, 3, 4,5))
gpXY <- gpXY + geom_density(data=x[x$Cell_Line == "013116.2G8_ESC",], aes(`Corrected XY_Distance (um)`), color="salmon", fill="salmon", alpha=0.3, size=1.0)
gpXY
##XYZ
gpXYZ <- ggplot_setup(TRUE)
gpXYZ <- gpXYZ + geom_density(data=x[x$Cell_Line == "101515.C3_ESC",], aes(`Corrected XYZ_Distance (um)`), color="lightblue", fill="lightblue", alpha=0.3, size=1.0) + scale_x_continuous(limits=c(0,1.0), breaks=c(0, 0.25, 0.5, 0.75, 1.0)) + xlab("3D Distance (um)") + ylab("Normalized Density") + theme(axis.line.x = element_line(size=1.2, color="white"), axis.line.y = element_line(size=1.2, color="white")) + scale_y_continuous(limits=c(0,4), breaks=c(0, 1, 2, 3, 4,5))
gpXYZ <- gpXYZ + geom_density(data=x[x$Cell_Line == "013116.2G8_ESC",], aes(`Corrected XYZ_Distance (um)`), color="salmon", fill="salmon", alpha=0.3, size=1.0)
gpXYZ
dev.off()
pdf("~/Desktop/Sox2_data_densitycurves2.pdf", width = 8, height=5)
##XY
gpXY <- ggplot_setup(TRUE)
gpXY <- gpXY + geom_density(data=x[x$Cell_Line == "101515.C3_ESC",], aes(`Corrected XY_Distance (um)`), color="lightblue", fill="lightblue", alpha=0.3, size=1.0) + scale_x_continuous(limits=c(0,1.0), breaks=c(0, 0.25, 0.5, 0.75, 1.0)) + xlab("XY Distance (um)") + ylab("Normalized Density") + theme(axis.line.x = element_line(size=1.2, color="white"), axis.line.y = element_line(size=1.2, color="white")) + scale_y_continuous(limits=c(0,5), breaks=c(0, 1, 2, 3, 4,5))
gpXY <- gpXY + geom_density(data=x[x$Cell_Line == "013116.2G8_ESC",], aes(`Corrected XY_Distance (um)`), color="salmon", fill="salmon", alpha=0.3, size=1.0)
gpXY
##XYZ
gpXYZ <- ggplot_setup(TRUE)
gpXYZ <- gpXYZ + geom_density(data=x[x$Cell_Line == "101515.C3_ESC",], aes(`Corrected XYZ_Distance (um)`), color="lightblue", fill="lightblue", alpha=0.3, size=1.0) + scale_x_continuous(limits=c(0,1.5), breaks=c(0, 0.25, 0.5, 0.75, 1.0, 1.25, 1.5)) + xlab("3D Distance (um)") + ylab("Normalized Density") + theme(axis.line.x = element_line(size=1.2, color="white"), axis.line.y = element_line(size=1.2, color="white")) + scale_y_continuous(limits=c(0,4), breaks=c(0, 1, 2, 3, 4,5))
gpXYZ <- gpXYZ + geom_density(data=x[x$Cell_Line == "013116.2G8_ESC",], aes(`Corrected XYZ_Distance (um)`), color="salmon", fill="salmon", alpha=0.3, size=1.0)
gpXYZ
dev.off()
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(MASS)
source('~/Library/Mobile Documents/com~apple~CloudDocs/Scripts/R/Scripts/Rfunctions.R')
load("~/Library/Mobile Documents/com~apple~CloudDocs/Batch42_streaming.RData")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(MASS)
source('~/Library/Mobile Documents/com~apple~CloudDocs/Scripts/R/Scripts/Rfunctions.R')
load("~/Library/Mobile Documents/com~apple~CloudDocs/Batch42_streaming.RData")
images <- unique(Batch42_streaming$C1_Image)
for (i in images){
cur_data = Batch42_streaming[Batch42_streaming$C1_Image == i,];
for (j in 1:200){
if (nrow(cur_data[cur_data$C1_T.Value..frame. == (j - 1),]) != 0 && nrow(cur_data[cur_data$C1_T.Value..frame. == j,]) != 0){
cur_data[cur_data$C1_T.Value..frame. == j, "XY_Streaming Distance (um)"] <- sqrt((cur_data[cur_data$C1_T.Value..frame. == (j - 1), "C1_X.Value..um."] - cur_data[cur_data$C1_T.Value..frame. == j, "C1_X.Value..um."])^2 + (cur_data[cur_data$C1_T.Value..frame. == (j - 1), "C1_Y.Value..um."] - cur_data[cur_data$C1_T.Value..frame. == j, "C1_Y.Value..um."])^2);
}
}
Batch42_streaming[Batch42_streaming$C1_Image == i, "XY_Streaming Distance (um)"] <- cur_data$`XY_Streaming Distance (um)`
}
hist(Batch42_streaming$`XY_Streaming Distance (um)`, breaks=50)
x_error <- Batch42_streaming
x_vals <- seq(0, 5, by=0.01)
##XY error
gp <- ggplot_setup(TRUE)
gp <- gp + geom_density(data=x_error, aes(`XY_Streaming Distance (um)`), color="grey", fill="grey", alpha=0.3, size=1.0) + scale_x_continuous(limits=c(0,0.5), breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5)) + xlab("XY Distance (um)") + ylab("Normalized Density") + theme(axis.line.x = element_line(size=1.2, color="white"), axis.line.y = element_line(size=1.2, color="white")) + scale_y_continuous(limits=c(0,15), breaks=c(0, 5, 10, 15))
gp
er_dens <- density(x_error$`XY_Streaming Distance (um)`, na.rm=TRUE)
mode_xlocation <- er_dens$x[er_dens$y == max(er_dens$y)]
mode_y <- max(er_dens$y)
gp <- ggplot_setup(TRUE)
gp <- gp + geom_density(data=x_error, aes(`XY_Streaming Distance (um)`), color="grey", fill="grey", alpha=0.3, size=1.0) + scale_x_continuous(limits=c(0,0.5), breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5)) + xlab("XY Distance (um)") + ylab("Normalized Density") + theme(axis.line.x = element_line(size=1.2, color="white"), axis.line.y = element_line(size=1.2, color="white")) + scale_y_continuous(limits=c(0,15), breaks=c(0, 5, 10, 15))
gp <- gp + geom_segment(aes(x=mode_xlocation, y=0, xend=mode_xlocation, yend=mode_y), linetype="dashed", color="white")
gp <- gp + geom_text(aes(x = mode_xlocation + 0.005, y=mode_y + 0.1, label=c("Mode (48 nm)")), color="white", angle=45, hjust="left", size=4)
gp
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(MASS)
source('~/Library/Mobile Documents/com~apple~CloudDocs/Scripts/R/Scripts/Rfunctions.R')
load("~/Desktop/07_01_2017_Batch50/03_Streaming/Batch50_03_streaming.Rdata")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(MASS)
source('~/Library/Mobile Documents/com~apple~CloudDocs/Scripts/R/Scripts/Rfunctions.R')
load("'~/Library/Mobile Documents/com~apple~CloudDocs/Batch50_03_streaming.Rdata")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(MASS)
source('~/Library/Mobile Documents/com~apple~CloudDocs/Scripts/R/Scripts/Rfunctions.R')
load("'~/Library/Mobile Documents/com~apple~CloudDocs/Batch50_03_streaming.Rdata")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(MASS)
source('~/Library/Mobile Documents/com~apple~CloudDocs/Scripts/R/Scripts/Rfunctions.R')
load("'~/Library/Mobile Documents/com~apple~CloudDocs/Batch50_03_streaming.Rdata")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(MASS)
source('~/Library/Mobile Documents/com~apple~CloudDocs/Scripts/R/Scripts/Rfunctions.R')
load("~/Library/Mobile Documents/com~apple~CloudDocs/Batch42_streaming.RData")
images <- unique(Batch42_streaming$C1_Image)
for (i in images){
cur_data = Batch42_streaming[Batch42_streaming$C1_Image == i,];
for (j in 1:200){
if (nrow(cur_data[cur_data$C1_T.Value..frame. == (j - 1),]) != 0 && nrow(cur_data[cur_data$C1_T.Value..frame. == j,]) != 0){
cur_data[cur_data$C1_T.Value..frame. == j, "XY_Streaming Distance (um)"] <- sqrt((cur_data[cur_data$C1_T.Value..frame. == (j - 1), "C1_X.Value..um."] - cur_data[cur_data$C1_T.Value..frame. == j, "C1_X.Value..um."])^2 + (cur_data[cur_data$C1_T.Value..frame. == (j - 1), "C1_Y.Value..um."] - cur_data[cur_data$C1_T.Value..frame. == j, "C1_Y.Value..um."])^2);
}
}
Batch42_streaming[Batch42_streaming$C1_Image == i, "XY_Streaming Distance (um)"] <- cur_data$`XY_Streaming Distance (um)`
}
hist(Batch42_streaming$`XY_Streaming Distance (um)`, breaks=50)
x_error <- Batch42_streaming
x_vals <- seq(0, 5, by=0.01)
##XY error
gp <- ggplot_setup(TRUE)
gp <- gp + geom_density(data=x_error, aes(`XY_Streaming Distance (um)`), color="grey", fill="grey", alpha=0.3, size=1.0) + scale_x_continuous(limits=c(0,0.5), breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5)) + xlab("XY Distance (um)") + ylab("Normalized Density") + theme(axis.line.x = element_line(size=1.2, color="white"), axis.line.y = element_line(size=1.2, color="white")) + scale_y_continuous(limits=c(0,15), breaks=c(0, 5, 10, 15))
gp
er_dens <- density(x_error$`XY_Streaming Distance (um)`, na.rm=TRUE)
mode_xlocation <- er_dens$x[er_dens$y == max(er_dens$y)]
mode_y <- max(er_dens$y)
gp <- ggplot_setup(TRUE)
gp <- gp + geom_density(data=x_error, aes(`XY_Streaming Distance (um)`), color="grey", fill="grey", alpha=0.3, size=1.0) + scale_x_continuous(limits=c(0,0.5), breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5)) + xlab("XY Distance (um)") + ylab("Normalized Density") + theme(axis.line.x = element_line(size=1.2, color="white"), axis.line.y = element_line(size=1.2, color="white")) + scale_y_continuous(limits=c(0,15), breaks=c(0, 5, 10, 15))
gp <- gp + geom_segment(aes(x=mode_xlocation, y=0, xend=mode_xlocation, yend=mode_y), linetype="dashed", color="white")
gp <- gp + geom_text(aes(x = mode_xlocation + 0.005, y=mode_y + 0.1, label=c("Mode (48 nm)")), color="white", angle=45, hjust="left", size=4)
gp
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(MASS)
source('~/Library/Mobile Documents/com~apple~CloudDocs/Scripts/R/Scripts/Rfunctions.R')
load("'~/Library/Mobile Documents/com~apple~CloudDocs/Batch50_03_streaming.Rdata")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(MASS)
source('~/Library/Mobile Documents/com~apple~CloudDocs/Scripts/R/Scripts/Rfunctions.R')
load("~/Library/Mobile Documents/com~apple~CloudDocs/Batch42_streaming.RData")
images <- unique(Batch42_streaming$C1_Image)
for (i in images){
cur_data = Batch42_streaming[Batch42_streaming$C1_Image == i,];
for (j in 1:200){
if (nrow(cur_data[cur_data$C1_T.Value..frame. == (j - 1),]) != 0 && nrow(cur_data[cur_data$C1_T.Value..frame. == j,]) != 0){
cur_data[cur_data$C1_T.Value..frame. == j, "XY_Streaming Distance (um)"] <- sqrt((cur_data[cur_data$C1_T.Value..frame. == (j - 1), "C1_X.Value..um."] - cur_data[cur_data$C1_T.Value..frame. == j, "C1_X.Value..um."])^2 + (cur_data[cur_data$C1_T.Value..frame. == (j - 1), "C1_Y.Value..um."] - cur_data[cur_data$C1_T.Value..frame. == j, "C1_Y.Value..um."])^2);
}
}
Batch42_streaming[Batch42_streaming$C1_Image == i, "XY_Streaming Distance (um)"] <- cur_data$`XY_Streaming Distance (um)`
}
hist(Batch42_streaming$`XY_Streaming Distance (um)`, breaks=50)
x_error <- Batch42_streaming
x_vals <- seq(0, 5, by=0.01)
##XY error
gp <- ggplot_setup(TRUE)
gp <- gp + geom_density(data=x_error, aes(`XY_Streaming Distance (um)`), color="grey", fill="grey", alpha=0.3, size=1.0) + scale_x_continuous(limits=c(0,0.5), breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5)) + xlab("XY Distance (um)") + ylab("Normalized Density") + theme(axis.line.x = element_line(size=1.2, color="white"), axis.line.y = element_line(size=1.2, color="white")) + scale_y_continuous(limits=c(0,15), breaks=c(0, 5, 10, 15))
gp
er_dens <- density(x_error$`XY_Streaming Distance (um)`, na.rm=TRUE)
mode_xlocation <- er_dens$x[er_dens$y == max(er_dens$y)]
mode_y <- max(er_dens$y)
gp <- ggplot_setup(TRUE)
gp <- gp + geom_density(data=x_error, aes(`XY_Streaming Distance (um)`), color="grey", fill="grey", alpha=0.3, size=1.0) + scale_x_continuous(limits=c(0,0.5), breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5)) + xlab("XY Distance (um)") + ylab("Normalized Density") + theme(axis.line.x = element_line(size=1.2, color="white"), axis.line.y = element_line(size=1.2, color="white")) + scale_y_continuous(limits=c(0,15), breaks=c(0, 5, 10, 15))
gp <- gp + geom_segment(aes(x=mode_xlocation, y=0, xend=mode_xlocation, yend=mode_y), linetype="dashed", color="white")
gp <- gp + geom_text(aes(x = mode_xlocation + 0.005, y=mode_y + 0.1, label=c("Mode (48 nm)")), color="white", angle=45, hjust="left", size=4)
gp
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(MASS)
source('~/Library/Mobile Documents/com~apple~CloudDocs/Scripts/R/Scripts/Rfunctions.R')
load("'~/Library/Mobile Documents/com~apple~CloudDocs/Batch50_03_streaming.Rdata")
load("~/Library/Mobile Documents/com~apple~CloudDocs/Batch50_03_streaming.Rdata")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(MASS)
source('~/Library/Mobile Documents/com~apple~CloudDocs/Scripts/R/Scripts/Rfunctions.R')
load("~/Library/Mobile Documents/com~apple~CloudDocs/Batch50_03_streaming.Rdata")
Batch50_03_streaming <- data.frame(BatchXX_data_combined_pairs_trackmate, "XY_Streaming.Distance..um."=NA)
head(Batch50_03_streaming)
images <- unique(Batch50_03_streaming$C1_Image)
for (i in images){
cur_data = Batch50_03_streaming[Batch50_03_streaming$C1_Image == i,];
for (j in 1:200){
if (nrow(cur_data[cur_data$C1_T.Value..frame. == (j - 1),]) != 0 && nrow(cur_data[cur_data$C1_T.Value..frame. == j,]) != 0){
cur_data[cur_data$C1_T.Value..frame. == j, "XY_Streaming.Distance..um."] <- sqrt((cur_data[cur_data$C1_T.Value..frame. == (j - 1), "C1_X.Value..um."] - cur_data[cur_data$C1_T.Value..frame. == j, "C1_X.Value..um."])^2 + (cur_data[cur_data$C1_T.Value..frame. == (j - 1), "C1_Y.Value..um."] - cur_data[cur_data$C1_T.Value..frame. == j, "C1_Y.Value..um."])^2);
}
}
Batch50_03_streaming[Batch50_03_streaming$C1_Image == i, "XY_Streaming.Distance..um."] <- cur_data$`XY_Streaming.Distance..um.`
}
hist(Batch50_03_streaming$`XY_Streaming.Distance..um.`, breaks=50)
x_error <- Batch50_03_streaming
x_vals <- seq(0, 5, by=0.01)
##XY error
gp <- ggplot_setup(TRUE)
gp <- gp + geom_density(data=x_error, aes(`XY_Streaming.Distance..um.`), color="grey", fill="grey", alpha=0.3, size=1.0) + scale_x_continuous(limits=c(0,0.5), breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5)) + xlab("XY Distance (um)") + ylab("Normalized Density") + theme(axis.line.x = element_line(size=1.2, color="white"), axis.line.y = element_line(size=1.2, color="white")) + scale_y_continuous(limits=c(0,70), breaks=c(0, 5, 10, 15, 20, 25))
gp
er_dens <- density(x_error$`XY_Streaming.Distance..um.`, na.rm=TRUE)
mode_xlocation <- er_dens$x[er_dens$y == max(er_dens$y)]
mode_y <- max(er_dens$y)
gp <- ggplot_setup(TRUE)
gp <- gp + geom_density(data=x_error, aes(`XY_Streaming.Distance..um.`), color="grey", fill="grey", alpha=0.3, size=1.0) + scale_x_continuous(limits=c(0,0.5), breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5)) + xlab("XY Distance (um)") + ylab("Normalized Density") + theme(axis.line.x = element_line(size=1.2, color="white"), axis.line.y = element_line(size=1.2, color="white")) + scale_y_continuous(limits=c(0,70), breaks=c(0, 5, 10, 15, 20, 25))
gp <- gp + geom_segment(aes(x=mode_xlocation, y=0, xend=mode_xlocation, yend=mode_y), linetype="dashed", color="white")
gp <- gp + geom_text(aes(x = mode_xlocation + 0.005, y=mode_y + 0.1, label=paste("Mode (", round(mode_xlocation * 1000), " nm)", sep = "")), color="white", angle=45, hjust="left", size=4)
gp
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(MASS)
source('~/Library/Mobile Documents/com~apple~CloudDocs/Scripts/R/Scripts/Rfunctions.R')
load("~/Desktop/07_01_2017_Batch50/06_Streaming/Batch50_06_streaming.Rdata")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(MASS)
source('~/Library/Mobile Documents/com~apple~CloudDocs/Scripts/R/Scripts/Rfunctions.R')
load("~/Library/Mobile Documents/com~apple~CloudDocs/Batch42_streaming.RData")
images <- unique(Batch42_streaming$C1_Image)
for (i in images){
cur_data = Batch42_streaming[Batch42_streaming$C1_Image == i,];
for (j in 1:200){
if (nrow(cur_data[cur_data$C1_T.Value..frame. == (j - 1),]) != 0 && nrow(cur_data[cur_data$C1_T.Value..frame. == j,]) != 0){
cur_data[cur_data$C1_T.Value..frame. == j, "XY_Streaming Distance (um)"] <- sqrt((cur_data[cur_data$C1_T.Value..frame. == (j - 1), "C1_X.Value..um."] - cur_data[cur_data$C1_T.Value..frame. == j, "C1_X.Value..um."])^2 + (cur_data[cur_data$C1_T.Value..frame. == (j - 1), "C1_Y.Value..um."] - cur_data[cur_data$C1_T.Value..frame. == j, "C1_Y.Value..um."])^2);
}
}
Batch42_streaming[Batch42_streaming$C1_Image == i, "XY_Streaming Distance (um)"] <- cur_data$`XY_Streaming Distance (um)`
}
hist(Batch42_streaming$`XY_Streaming Distance (um)`, breaks=50)
x_error <- Batch42_streaming
x_vals <- seq(0, 5, by=0.01)
##XY error
gp <- ggplot_setup(TRUE)
gp <- gp + geom_density(data=x_error, aes(`XY_Streaming Distance (um)`), color="grey", fill="grey", alpha=0.3, size=1.0) + scale_x_continuous(limits=c(0,0.5), breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5)) + xlab("XY Distance (um)") + ylab("Normalized Density") + theme(axis.line.x = element_line(size=1.2, color="white"), axis.line.y = element_line(size=1.2, color="white")) + scale_y_continuous(limits=c(0,15), breaks=c(0, 5, 10, 15))
gp
er_dens <- density(x_error$`XY_Streaming Distance (um)`, na.rm=TRUE)
mode_xlocation <- er_dens$x[er_dens$y == max(er_dens$y)]
mode_y <- max(er_dens$y)
gp <- ggplot_setup(TRUE)
gp <- gp + geom_density(data=x_error, aes(`XY_Streaming Distance (um)`), color="grey", fill="grey", alpha=0.3, size=1.0) + scale_x_continuous(limits=c(0,0.5), breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5)) + xlab("XY Distance (um)") + ylab("Normalized Density") + theme(axis.line.x = element_line(size=1.2, color="white"), axis.line.y = element_line(size=1.2, color="white")) + scale_y_continuous(limits=c(0,15), breaks=c(0, 5, 10, 15))
gp <- gp + geom_segment(aes(x=mode_xlocation, y=0, xend=mode_xlocation, yend=mode_y), linetype="dashed", color="white")
gp <- gp + geom_text(aes(x = mode_xlocation + 0.005, y=mode_y + 0.1, label=c("Mode (48 nm)")), color="white", angle=45, hjust="left", size=4)
gp
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(MASS)
source('~/Library/Mobile Documents/com~apple~CloudDocs/Scripts/R/Scripts/Rfunctions.R')
load("~/Library/Mobile Documents/com~apple~CloudDocs/Batch50_03_streaming.Rdata")
Batch50_03_streaming <- data.frame(BatchXX_data_combined_pairs_trackmate, "XY_Streaming.Distance..um."=NA)
head(Batch50_03_streaming)
images <- unique(Batch50_03_streaming$C1_Image)
for (i in images){
cur_data = Batch50_03_streaming[Batch50_03_streaming$C1_Image == i,];
for (j in 1:200){
if (nrow(cur_data[cur_data$C1_T.Value..frame. == (j - 1),]) != 0 && nrow(cur_data[cur_data$C1_T.Value..frame. == j,]) != 0){
cur_data[cur_data$C1_T.Value..frame. == j, "XY_Streaming.Distance..um."] <- sqrt((cur_data[cur_data$C1_T.Value..frame. == (j - 1), "C1_X.Value..um."] - cur_data[cur_data$C1_T.Value..frame. == j, "C1_X.Value..um."])^2 + (cur_data[cur_data$C1_T.Value..frame. == (j - 1), "C1_Y.Value..um."] - cur_data[cur_data$C1_T.Value..frame. == j, "C1_Y.Value..um."])^2);
}
}
Batch50_03_streaming[Batch50_03_streaming$C1_Image == i, "XY_Streaming.Distance..um."] <- cur_data$`XY_Streaming.Distance..um.`
}
hist(Batch50_03_streaming$`XY_Streaming.Distance..um.`, breaks=50)
x_error <- Batch50_03_streaming
x_vals <- seq(0, 5, by=0.01)
##XY error
gp <- ggplot_setup(TRUE)
gp <- gp + geom_density(data=x_error, aes(`XY_Streaming.Distance..um.`), color="grey", fill="grey", alpha=0.3, size=1.0) + scale_x_continuous(limits=c(0,0.5), breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5)) + xlab("XY Distance (um)") + ylab("Normalized Density") + theme(axis.line.x = element_line(size=1.2, color="white"), axis.line.y = element_line(size=1.2, color="white")) + scale_y_continuous(limits=c(0,70), breaks=c(0, 5, 10, 15, 20, 25))
gp
er_dens <- density(x_error$`XY_Streaming.Distance..um.`, na.rm=TRUE)
mode_xlocation <- er_dens$x[er_dens$y == max(er_dens$y)]
mode_y <- max(er_dens$y)
gp <- ggplot_setup(TRUE)
gp <- gp + geom_density(data=x_error, aes(`XY_Streaming.Distance..um.`), color="grey", fill="grey", alpha=0.3, size=1.0) + scale_x_continuous(limits=c(0,0.5), breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5)) + xlab("XY Distance (um)") + ylab("Normalized Density") + theme(axis.line.x = element_line(size=1.2, color="white"), axis.line.y = element_line(size=1.2, color="white")) + scale_y_continuous(limits=c(0,70), breaks=c(0, 5, 10, 15, 20, 25))
gp <- gp + geom_segment(aes(x=mode_xlocation, y=0, xend=mode_xlocation, yend=mode_y), linetype="dashed", color="white")
gp <- gp + geom_text(aes(x = mode_xlocation + 0.005, y=mode_y + 0.1, label=paste("Mode (", round(mode_xlocation * 1000), " nm)", sep = "")), color="white", angle=45, hjust="left", size=4)
gp
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(MASS)
source('~/Library/Mobile Documents/com~apple~CloudDocs/Scripts/R/Scripts/Rfunctions.R')
load("~/Library/Mobile Documents/com~apple~CloudDocs/Batch50_06_streaming.Rdata")
Batch50_06_streaming <- data.frame(BatchXX_data_combined_pairs_trackmate, "XY_Streaming.Distance..um."=NA)
head(Batch50_06_streaming)
images <- unique(Batch50_06_streaming$C1_Image)
for (i in images){
cur_data = Batch50_06_streaming[Batch50_06_streaming$C1_Image == i,];
for (j in 1:200){
if (nrow(cur_data[cur_data$C1_T.Value..frame. == (j - 1),]) != 0 && nrow(cur_data[cur_data$C1_T.Value..frame. == j,]) != 0){
cur_data[cur_data$C1_T.Value..frame. == j, "XY_Streaming.Distance..um."] <- sqrt((cur_data[cur_data$C1_T.Value..frame. == (j - 1), "C1_X.Value..um."] - cur_data[cur_data$C1_T.Value..frame. == j, "C1_X.Value..um."])^2 + (cur_data[cur_data$C1_T.Value..frame. == (j - 1), "C1_Y.Value..um."] - cur_data[cur_data$C1_T.Value..frame. == j, "C1_Y.Value..um."])^2);
}
}
Batch50_06_streaming[Batch50_06_streaming$C1_Image == i, "XY_Streaming.Distance..um."] <- cur_data$`XY_Streaming.Distance..um.`
}
hist(Batch50_06_streaming$`XY_Streaming.Distance..um.`, breaks=50)
x_error <- Batch50_06_streaming
x_vals <- seq(0, 5, by=0.01)
##XY error
gp <- ggplot_setup(TRUE)
gp <- gp + geom_density(data=x_error, aes(`XY_Streaming.Distance..um.`), color="grey", fill="grey", alpha=0.3, size=1.0) + scale_x_continuous(limits=c(0,0.5), breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5)) + xlab("XY Distance (um)") + ylab("Normalized Density") + theme(axis.line.x = element_line(size=1.2, color="white"), axis.line.y = element_line(size=1.2, color="white")) + scale_y_continuous(limits=c(0,70), breaks=c(0, 5, 10, 15, 20, 25))
gp
er_dens <- density(x_error$`XY_Streaming.Distance..um.`, na.rm=TRUE)
mode_xlocation <- er_dens$x[er_dens$y == max(er_dens$y)]
mode_y <- max(er_dens$y)
gp <- ggplot_setup(TRUE)
gp <- gp + geom_density(data=x_error, aes(`XY_Streaming.Distance..um.`), color="grey", fill="grey", alpha=0.3, size=1.0) + scale_x_continuous(limits=c(0,0.5), breaks=c(0, 0.1, 0.2, 0.3, 0.4, 0.5)) + xlab("XY Distance (um)") + ylab("Normalized Density") + theme(axis.line.x = element_line(size=1.2, color="white"), axis.line.y = element_line(size=1.2, color="white")) + scale_y_continuous(limits=c(0,70), breaks=c(0, 5, 10, 15, 20, 25))
gp <- gp + geom_segment(aes(x=mode_xlocation, y=0, xend=mode_xlocation, yend=mode_y), linetype="dashed", color="white")
gp <- gp + geom_text(aes(x = mode_xlocation + 0.005, y=mode_y + 0.1, label=paste("Mode (", round(mode_xlocation * 1000), " nm)", sep = "")), color="white", angle=45, hjust="left", size=4)
gp
